{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","components/Logo.js","components/DashboardNavbar.js","components/NavItem.js","components/DashboardSidebar.js","components/DashboardLayout.js","pages/Dashboard.js","pages/Login.js","pages/NotFound.js","components/controls/Button.js","components/controls/ActionButton.js","components/controls/Controls.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/Checkbox.js","components/controls/DatePicker.js","components/useForm.js","pages/InvoiceTransactionForm.js","components/useTable.js","components/Popup.js","pages/InvoiceTransactions.js","pages/Branch.js","pages/Site.js","pages/Transporter.js","pages/Supplier.js","pages/Logout.js","AppRoutes.js","App.js","components/useToken.js","components/useCompany.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","default","paper","colors","common","white","primary","contrastText","light","main","dark","secondary","error","warning","info","success","text","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","Logo","props","alt","src","navLink","color","DashboardNavbar","onMobileNavOpen","token","company","setCompany","rest","classes","useState","notifications","anchorEl","setAnchorEl","selectedIndex","userCompanyUser","map","item","companyCode","bindCompany","selectedCompany","axios","get","id","companyId","headers","Authorization","jwtToken","then","res","console","log","JSON","stringify","data","catch","err","fetchCompanyDetails","useEffect","AppBar","elevation","Toolbar","to","Box","sx","flexGrow","List","component","aria-label","ListItem","button","aria-haspopup","aria-controls","onClick","event","currentTarget","ListItemText","Menu","keepMounted","open","onClose","option","MenuItem","selected","handleMenuItemClick","IconButton","Badge","badgeContent","length","variant","className","root","maxWidth","nested","paddingLeft","spacing","NavItem","href","Icon","icon","title","children","useLocation","React","setOpen","active","matchPath","path","end","pathname","disableGutters","display","py","key","Button","justifyContent","textTransform","mr","size","Collapse","in","timeout","unmountOnExit","disablePadding","childHref","ChildIcon","childTitle","RouterLink","items","HomeIcon","BarChartIcon","FileTextIcon","PackageIcon","ClipboarIcon","TagIcon","UserIcon","DashboardSidebar","onMobileClose","openMobile","content","flexDirection","p","Hidden","lgUp","Drawer","anchor","PaperProps","lgDown","defaultProps","DashboardLayoutRoot","experimentalStyled","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","setToken","navigate","useNavigate","state","isMobileNavOpen","setMobileNavOpen","Dashboard","propToken","stateToken","Helmet","minHeight","Container","Typography","Login","initialValues","userName","password","clientCode","validationSchema","Yup","shape","max","required","onSubmit","values","setSubmitting","setFieldError","ClientCode","Username","Password","post","errorMessage","response","message","errors","handleBlur","handleChange","handleSubmit","handleReset","isSubmitting","touched","onReset","mb","TextField","fullWidth","helperText","label","name","onBlur","onChange","type","value","CircularProgress","Fragment","pt","general","disabled","NotFound","align","textAlign","style","marginTop","minWidth","Controls","Input","other","RadioGroup","FormControl","FormLabel","row","FormControlLabel","control","Radio","Select","InputLabel","FormHelperText","Checkbox","checked","e","target","convertToDefEventPara","DatePicker","utils","DateFnsUtils","inputVariant","format","date","ActionButton","Form","autoComplete","useCardStyles","rightRoot","marginBottom","leftRoot","marginRight","InvoiceTransactionForm","cardClasses","addOrEdit","recordForEdit","branchesSelectOptions","branchParamsOptions","branchesOptions","initialBranchId","initialBranchParamOption","initialBranchCommunicationId","initialSupplierId","initialSupplierCommunicationId","initialTransporterId","initialTransporterCommunicationId","invoiceStatusIdOptions","branchIdOptions","branchCommunicationIdOptions","setBranchCommunicationIdOptions","supplierIdOptions","setSupplierIdOptions","supplierCommunicationIdOptions","setSupplierCommunicationIdOptions","transporterIdOptions","setTransporterIdOptions","transporterCommunicationIdOptions","setTransporterCommunicationIdOptions","selectedBranchId","selectedBranchCommunicationId","selectedSupplierId","selectedSupplierCommunicationId","selectedTransporterId","initialFValues","branchId","branchCommunicationId","invoiceReceivedDate","Date","invoiceDate","invoiceNumber","invoiceStatusId","lrdate","lrnumber","numberOfParcels","supplierId","supplierCommunicationId","transporterId","transporterCommunicationId","validate","fieldValues","temp","setErrors","Object","every","validateOnChange","setValues","handleInputChange","resetForm","useForm","getBranchDetailsGrid","Grid","lg","md","xl","xs","Card","CardHeader","CardContent","container","currentBranchParamOption","handleBranchIdChange","preventDefault","toggleBranchDetailsView","handleSupplierIdChange","handleTransporterIdChange","useTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handlePageChange","newPage","handleRowsPerPageChange","parseInt","descendingComparator","b","TblContainer","Table","table","TblHead","TableHead","TableRow","headCell","TableCell","sortDirection","disableSorting","TableSortLabel","direction","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","sort","stableSort","fn","getComparator","slice","dialogWrapper","position","dialogTitle","Popup","openPopup","setOpenPopup","Dialog","DialogTitle","DialogContent","dividers","pageContent","searchInput","InvoiceTransactions","setRecordForEdit","popupActionType","setPopupActionType","setRecords","setLoading","setFilterFn","branches","branch","branchFilterOption","branchCode","push","branchOptions","transformCommunications","transformSites","sitesOptions","sitesCommunicationOptions","transformSuppliers","suppliersOptions","suppliersCommunicationOptions","transformTransporters","transportersOptions","transportersCommunicationOptions","branchCommunicationOptions","transformBranches","openInPopup","actionType","Paper","seachToolbar","InputProps","startAdornment","InputAdornment","Search","filter","toLowerCase","includes","startIcon","TableBody","moment","employee","communicationOptions","communications","branchCommunication","address","communication","addressLine1","addressLine2","sites","branchSite","site","code","siteCommunicationOptions","siteCommunications","siteCommunication","j","suppliers","branchSupplier","supplier","supplierCommunicationOptions","supplierCommunications","supplierCommunication","transporters","branchTransporter","transporter","transporterCommunicationOptions","transporterCommunications","transporterCommunication","Branch","branchName","displayName","isActive","toString","creationTime","Site","siteCode","siteName","Transporter","transporterCode","transporterName","transporterDeliveryTime","Supplier","supplierCode","supplierName","Logout","AppRoutes","element","App","localStorage","getItem","parse","getToken","setItem","useToken","getCompany","useCompany","routing","useRoutes","ThemeProvider","defaults","baseURL","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3e5e22a.chunk.js","sourcesContent":["/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","/* eslint-disable no-underscore-dangle */\nimport { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: '#F4F6F8',\n      paper: colors.common.white\n    },\n    primary: {\n      contrastText: '#ffffff',\n      light: '#4791db',\n      main: '#5664d2',\n      dark: '#115293'\n    },\n    secondary: {\n      contrastText: '#ffffff',\n      light: '#e33371',\n      main: '#dc004e',\n      dark: '#9a0036'\n    },\n    error: {\n      contrastText: '#ffffff',\n      light: '#e57373',\n      main: '#f44336',\n      dark: '#d32f2f'\n    },\n    warning: {\n      contrastText: '#ffffff',\n      light: '#ffb74d',\n      main: '#ff9800',\n      dark: '#f57c00'\n    },\n    info: {\n      contrastText: '#ffffff',\n      light: '#64b5f6',\n      main: '#2196f3',\n      dark: '#1976d2'\n    },\n    success: {\n      contrastText: '#ffffff',\n      light: '#81c784',\n      main: '#4caf50',\n      dark: '#388e3c'\n    },\n    text: {\n      primary: '#172b4d',\n      secondary: '#6b778c'\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","const Logo = (props) => (\n  <img\n    alt=\"Logo\"\n    src=\"/static/logo.svg\"\n    {...props}\n  />\n);\n\nexport default Logo;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  IconButton,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Logout from '@material-ui/icons/Logout';\nimport axios from 'axios';\nimport Logo from './Logo';\n\nconst useStyles = makeStyles((theme) => ({\n  navLink: {\n    color: 'white !important'\n  }\n}));\n\nconst DashboardNavbar = (props) => {\n  const { onMobileNavOpen, token, company, setCompany, ...rest } = props;\n  const classes = useStyles();\n  const [notifications] = useState([]);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const selectedIndex = company ? company.index : 0;\n\n  const options = token?.userCompanyUser.map((item) => item.companyCode);\n\n  const fetchCompanyDetails = (selectedCompany) => {\n    axios\n      .get(\n        `api/Assignment/GetBranchTSSByUser?userId=${token.id}&cmpID=${selectedCompany.companyId}`,\n        {\n          headers: { Authorization: `Bearer ${token.jwtToken}` }\n        }\n      )\n      .then((res) => {\n        console.log(JSON.stringify(res.data));\n        selectedCompany['branches'] = res.data;\n        setCompany(selectedCompany);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const bindCompany = (index) => {\n    let selectedCompany;\n    if (!company || company.index !== index) {\n      selectedCompany = {\n        ...token.userCompanyUser[index]\n      };\n      fetchCompanyDetails(selectedCompany);\n      selectedCompany['index'] = index;\n    } else {\n      selectedCompany = company;\n    }\n  };\n\n  useEffect(() => {\n    if (token) bindCompany(selectedIndex);\n  }, [token, company]);\n\n  const handleClickListItem = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    bindCompany(index);\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <AppBar elevation={0} {...rest}>\n      <Toolbar>\n        <RouterLink to=\"/\">{<Logo />}</RouterLink>\n        <Box sx={{ flexGrow: 1 }} />\n        {token ? (\n          <Fragment>\n            <List component=\"nav\" aria-label=\"Device settings\">\n              <ListItem\n                button\n                aria-haspopup=\"true\"\n                aria-controls=\"lock-menu\"\n                aria-label=\"when device is locked\"\n                onClick={handleClickListItem}\n              >\n                <ListItemText primary={options[selectedIndex]} />\n              </ListItem>\n            </List>\n            <Menu\n              id=\"lock-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n                  selected={index === selectedIndex}\n                  onClick={(event) => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n            <IconButton color=\"inherit\">\n              <Badge\n                badgeContent={notifications.length}\n                color=\"primary\"\n                variant=\"dot\"\n              >\n                <RouterLink to=\"/logout\" className={classes.navLink}>\n                  <Logout />\n                </RouterLink>\n              </Badge>\n            </IconButton>\n          </Fragment>\n        ) : (\n          <Fragment></Fragment>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nDashboardNavbar.propTypes = {\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default DashboardNavbar;\n","import {\n  NavLink as RouterLink,\n  matchPath,\n  useLocation\n} from 'react-router-dom';\nimport React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Button, ListItem } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  }\n}));\n\nconst NavItem = ({ href, icon: Icon, title, children, ...rest }) => {\n  const location = useLocation();\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const active = href\n    ? !!matchPath(\n        {\n          path: href,\n          end: false\n        },\n        location.pathname\n      )\n    : false;\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <Fragment>\n      {!children ? (\n        <ListItem\n          disableGutters\n          sx={{\n            display: 'flex',\n            py: 0\n          }}\n          {...rest}\n          key={title}\n        >\n          <Button\n            component={RouterLink}\n            sx={{\n              color: 'text.secondary',\n              fontWeight: 'medium',\n              justifyContent: 'flex-start',\n              letterSpacing: 0,\n              py: 1.25,\n              textTransform: 'none',\n              width: '100%',\n              ...(active && {\n                color: 'primary.main'\n              }),\n              '& svg': {\n                mr: 1\n              }\n            }}\n            to={href}\n          >\n            {Icon && <Icon size=\"20\" />}\n            <span>{title}</span>\n          </Button>\n        </ListItem>\n      ) : (\n        <Fragment>\n          <ListItem\n            disableGutters\n            sx={{\n              display: 'flex',\n              py: 0\n            }}\n            {...rest}\n            key={title}\n          >\n            <Button\n              onClick={handleClick}\n              sx={{\n                color: 'text.secondary',\n                fontWeight: 'medium',\n                justifyContent: 'flex-start',\n                letterSpacing: 0,\n                py: 1.25,\n                textTransform: 'none',\n                width: '100%',\n                ...(active && {\n                  color: 'primary.main'\n                }),\n                '& svg': {\n                  mr: 1\n                }\n              }}\n            >\n              {Icon && <Icon size=\"20\" />}\n              <span>{title}</span>\n              {open ? <ExpandLess /> : <ExpandMore />}\n            </Button>\n          </ListItem>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              {children.map(\n                ({\n                  href: childHref,\n                  icon: ChildIcon,\n                  title: childTitle,\n                  children: grandChildren,\n                  ...childRest\n                }) => (\n                  <ListItem\n                    className={classes.nested}\n                    disableGutters\n                    sx={{\n                      display: 'flex',\n                      py: 0\n                    }}\n                    {...rest}\n                    key={childTitle}\n                  >\n                    <Button\n                      component={RouterLink}\n                      sx={{\n                        color: 'text.secondary',\n                        fontWeight: 'medium',\n                        justifyContent: 'flex-start',\n                        letterSpacing: 0,\n                        py: 1.25,\n                        textTransform: 'none',\n                        width: '100%',\n                        ...(active && {\n                          color: 'primary.main'\n                        }),\n                        '& svg': {\n                          mr: 1\n                        }\n                      }}\n                      to={childHref}\n                    >\n                      {ChildIcon && <ChildIcon size=\"20\" />}\n                      <span>{childTitle}</span>\n                    </Button>\n                  </ListItem>\n                )\n              )}\n            </List>\n          </Collapse>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nNavItem.propTypes = {\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import { Children, useEffect, Fragment } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Box, Drawer, Hidden, List } from '@material-ui/core';\nimport {\n  Home as HomeIcon,\n  BarChart as BarChartIcon,\n  User as UserIcon,\n  Package as PackageIcon,\n  FileText as FileTextIcon,\n  Clipboard as ClipboarIcon,\n  Tag as TagIcon\n} from 'react-feather';\nimport NavItem from './NavItem';\n\nconst items = [\n  {\n    href: '/dashboard',\n    icon: HomeIcon,\n    title: 'Dashboard'\n  },\n  {\n    icon: BarChartIcon,\n    title: 'Transaction',\n    children: [\n      {\n        href: '/invoices',\n        icon: FileTextIcon,\n        title: 'Invoice Inward'\n      },\n      {\n        href: '/parcels',\n        icon: PackageIcon,\n        title: 'Parcel Inward'\n      }\n    ]\n  },\n  {\n    href: '/assignment',\n    icon: ClipboarIcon,\n    title: 'Assignment'\n  },\n  {\n    icon: TagIcon,\n    title: 'Definition',\n    children: [\n      {\n        href: '/branch',\n        icon: FileTextIcon,\n        title: 'Branch'\n      },\n      {\n        href: '/site',\n        icon: PackageIcon,\n        title: 'Site'\n      },\n      {\n        href: '/transporter',\n        icon: PackageIcon,\n        title: 'Transporter'\n      },\n      {\n        href: '/supplier',\n        icon: PackageIcon,\n        title: 'Supplier'\n      }\n    ]\n  },\n  {\n    href: '/admin',\n    icon: UserIcon,\n    title: 'Admin'\n  }\n];\n\nconst DashboardSidebar = ({ onMobileClose, openMobile, token, ...rest }) => {\n  const location = useLocation();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n  }, [location.pathname]);\n\n  const content = (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      }}\n    >\n      <Box sx={{ p: 2 }}>\n        <List>\n          {items.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n              children={item.children}\n            />\n          ))}\n        </List>\n      </Box>\n      <Box sx={{ flexGrow: 1 }} />\n    </Box>\n  );\n\n  return (\n    <Fragment>\n      {token ? (\n        <Fragment>\n          <Hidden lgUp>\n            <Drawer\n              anchor=\"left\"\n              onClose={onMobileClose}\n              open={openMobile}\n              variant=\"temporary\"\n              PaperProps={{\n                sx: {\n                  width: 256\n                }\n              }}\n            >\n              {content}\n            </Drawer>\n          </Hidden>\n          <Hidden lgDown>\n            <Drawer\n              anchor=\"left\"\n              open\n              variant=\"persistent\"\n              PaperProps={{\n                sx: {\n                  width: 256,\n                  top: 64,\n                  height: 'calc(100% - 64px)'\n                }\n              }}\n            >\n              {content}\n            </Drawer>\n          </Hidden>\n        </Fragment>\n      ) : (\n        <Fragment> </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nDashboardSidebar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nDashboardSidebar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false\n};\n\nexport default DashboardSidebar;\n","import React, { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { experimentalStyled } from '@material-ui/core';\nimport DashboardNavbar from './DashboardNavbar';\nimport DashboardSidebar from './DashboardSidebar';\n\nconst DashboardLayoutRoot = experimentalStyled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n  display: 'flex',\n  height: '100%',\n  overflow: 'hidden',\n  width: '100%'\n}));\n\nconst DashboardLayoutWrapper = experimentalStyled('div')(({ theme }) => ({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n  paddingTop: 64,\n  [theme.breakpoints.up('lg')]: {\n    paddingLeft: 256\n  }\n}));\n\nconst DashboardLayoutContainer = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden'\n});\n\nconst DashboardLayoutContent = experimentalStyled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto'\n});\n\nconst DashboardLayout = (props) => {\n  const { token, setToken } = props;\n  const { company, setCompany } = props;\n  const navigate = useNavigate();\n  const { pathname, state } = useLocation();\n  console.log(\n    'DashboardLayout ==> pathname: ' +\n      pathname +\n      ', token: ' +\n      JSON.stringify(token)\n  );\n\n  useEffect(() => {\n    if (pathname === '/') {\n      if (!token) {\n        navigate('/login');\n      } else {\n        navigate('/dashboard');\n      }\n    }\n  });\n\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <DashboardLayoutRoot>\n      <DashboardNavbar\n        token={token}\n        onMobileNavOpen={() => setMobileNavOpen(true)}\n        company={company}\n        setCompany={setCompany}\n      />\n      <DashboardSidebar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n        token={token}\n      />\n      <DashboardLayoutWrapper>\n        <DashboardLayoutContainer>\n          <DashboardLayoutContent>\n            <Outlet />\n          </DashboardLayoutContent>\n        </DashboardLayoutContainer>\n      </DashboardLayoutWrapper>\n    </DashboardLayoutRoot>\n  );\n};\n\nexport default DashboardLayout;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Box, Container, Typography } from '@material-ui/core';\nimport { useLocation } from 'react-router-dom';\n\nconst Dashboard = (props) => {\n  const { token: propToken, setToken } = props;\n  const { state } = useLocation();\n  const token = propToken;\n\n  if (!token && state) {\n    const { token: stateToken } = state;\n    if (setToken) setToken(stateToken);\n    token = stateToken;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <Typography color=\"textPrimary\" variant=\"h2\">\n            Welcome to IP Tracking\n          </Typography>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst Login = (props) => {\n  const { setToken } = props;\n  const { pathname } = useLocation();\n  console.log('Login ==> pathname: ' + pathname);\n\n  useEffect(() => {\n    console.log('Loggin.useEffect');\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Login | IP Tracking</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              userName: '',\n              password: '',\n              clientCode: ''\n            }}\n            validationSchema={Yup.object().shape({\n              userName: Yup.string()\n                .max(32, 'Must be 32 characters or less')\n                .required('User Name is required'),\n              clientCode: Yup.string()\n                .max(64, 'Must be 64 characters or less')\n                .required('Client Code is required'),\n              password: Yup.string()\n                .max(128, 'Must be 128 characters or less')\n                .required('Password is required')\n            })}\n            onSubmit={(values, { setSubmitting, setFieldError }) => {\n              const data = {\n                ClientCode: values.clientCode,\n                Username: values.userName,\n                Password: values.password\n              };\n              axios\n                .post('api/Account/Authenticate', data)\n                .then((res) => {\n                  const token = res.data;\n                  console.log('API_RESPONSE: ' + JSON.stringify(token));\n                  setSubmitting(false);\n                  if (setToken) {\n                    console.log('setToken in Login is present');\n                    setToken(token);\n                  }\n                })\n                .catch((err) => {\n                  setSubmitting(false);\n                  console.log('error', err);\n                  const errorMessage = err.response?.data?.message;\n                  console.log('errorMessage: ', errorMessage);\n                  setFieldError('general', errorMessage);\n                });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              handleReset,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit} onReset={handleReset}>\n                <Box sx={{ mb: 3 }}>\n                  <Typography color=\"textPrimary\" variant=\"h2\">\n                    Sign in\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.userName && errors.userName)}\n                  fullWidth\n                  helperText={touched.userName && errors.userName}\n                  label=\"User Name\"\n                  margin=\"normal\"\n                  name=\"userName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"text\"\n                  value={values.userName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.clientCode && errors.clientCode)}\n                  fullWidth\n                  helperText={touched.clientCode && errors.clientCode}\n                  label=\"Client Code\"\n                  margin=\"normal\"\n                  name=\"clientCode\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"text\"\n                  value={values.clientCode}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                {isSubmitting ? (\n                  <Box\n                    sx={{ py: 2, display: 'flex', justifyContent: 'center' }}\n                  >\n                    <CircularProgress />\n                  </Box>\n                ) : (\n                  <React.Fragment>\n                    <Box sx={{ pt: 2 }}>\n                      <Typography color=\"red\" variant=\"h6\">\n                        {errors.general}\n                      </Typography>\n                    </Box>\n                    <Box sx={{ py: 2 }}>\n                      <Button\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                        size=\"large\"\n                        type=\"submit\"\n                        variant=\"contained\"\n                        sx={{ mr: 2 }}\n                      >\n                        Sign in now\n                      </Button>\n                      <Button\n                        color=\"secondary\"\n                        size=\"large\"\n                        variant=\"contained\"\n                        type=\"reset\"\n                      >\n                        Reset\n                      </Button>\n                    </Box>\n                  </React.Fragment>\n                )}\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Login;\n","import { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Typography\n} from '@material-ui/core';\n\nconst NotFound = () => (\n  <>\n    <Helmet>\n      <title>404 | Material Kit</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center'\n      }}\n    >\n      <Container maxWidth=\"md\">\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"h1\"\n        >\n          404: The page you are looking for isn’t here\n        </Typography>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"subtitle2\"\n        >\n          You either tried some shady route or you came here by mistake.\n          Whichever it is, try using the navigation\n        </Typography>\n        <Box sx={{ textAlign: 'center' }}>\n          <img\n            alt=\"Under development\"\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            style={{\n              marginTop: 50,\n              display: 'inline-block',\n              maxWidth: '100%',\n              width: 560\n            }}\n          />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { Button as MuiButton, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(0.5)\n  },\n  label: {\n    textTransform: 'none'\n  }\n}));\n\nexport default function Button(props) {\n  const { text, size, color, variant, onClick, ...other } = props;\n  const classes = useStyles();\n\n  return (\n    <MuiButton\n      variant={variant || 'contained'}\n      size={size || 'large'}\n      onClick={onClick}\n      {...other}\n      classes={{ root: classes.root, label: classes.label }}\n    >\n      {text}\n    </MuiButton>\n  );\n}\n","import React from 'react';\nimport { Button, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 0,\n    margin: theme.spacing(0.5)\n  },\n  secondary: {\n    backgroundColor: theme.palette.secondary.light,\n    '& .MuiButton-label': {\n      color: theme.palette.secondary.main\n    }\n  },\n  primary: {\n    backgroundColor: theme.palette.primary.light,\n    '& .MuiButton-label': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nexport default function ActionButton(props) {\n  const { color, children, onClick } = props;\n  const classes = useStyles();\n\n  return (\n    <Button className={`${classes.root} ${classes[color]}`} onClick={onClick}>\n      {children}\n    </Button>\n  );\n}\n","import Input from \"./Input\";\nimport RadioGroup from \"./RadioGroup\";\nimport Select from \"./Select\";\nimport Checkbox from \"./Checkbox\";\nimport DatePicker from \"./DatePicker\";\nimport Button from \"./Button\";\nimport ActionButton from \"./ActionButton\";\n\nconst Controls = {\n    Input,\n    RadioGroup,\n    Select,\n    Checkbox,\n    DatePicker,\n    Button,\n    ActionButton\n}\n\nexport default Controls;","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport default function Input(props) {\n  const { name, label, value, error = null, onChange, ...other } = props;\n  return (\n    <TextField\n      variant=\"outlined\"\n      label={label}\n      name={name}\n      value={value}\n      onChange={onChange}\n      {...other}\n      {...(error && { error: true, helperText: error })}\n    />\n  );\n}\n","import React from 'react';\nimport {\n  FormControl,\n  FormLabel,\n  RadioGroup as MuiRadioGroup,\n  FormControlLabel,\n  Radio\n} from '@material-ui/core';\n\nexport default function RadioGroup(props) {\n  const { name, label, value, onChange, items } = props;\n\n  return (\n    <FormControl>\n      <FormLabel>{label}</FormLabel>\n      <MuiRadioGroup row name={name} value={value} onChange={onChange}>\n        {items.map((item) => (\n          <FormControlLabel\n            key={item.id}\n            value={item.id}\n            control={<Radio />}\n            label={item.title}\n          />\n        ))}\n      </MuiRadioGroup>\n    </FormControl>\n  );\n}\n","import React from 'react';\nimport {\n  FormControl,\n  InputLabel,\n  Select as MuiSelect,\n  MenuItem,\n  FormHelperText\n} from '@material-ui/core';\n\nexport default function Select(props) {\n  const { name, label, value, error = null, onChange, options, size } = props;\n\n  return (\n    <FormControl variant=\"outlined\" {...(error && { error: true })}>\n      <InputLabel>{label}</InputLabel>\n      <MuiSelect\n        label={label}\n        name={name}\n        value={value}\n        onChange={onChange}\n        size={size}\n      >\n        <MenuItem value=\"\">None</MenuItem>\n        {options.map((item) => (\n          <MenuItem key={item.id} value={item.id}>\n            {item.title}\n          </MenuItem>\n        ))}\n      </MuiSelect>\n      {error && <FormHelperText>{error}</FormHelperText>}\n    </FormControl>\n  );\n}\n","import React from 'react';\nimport {\n  FormControl,\n  FormControlLabel,\n  Checkbox as MuiCheckbox\n} from '@material-ui/core';\n\nexport default function Checkbox(props) {\n  const { name, label, value, onChange } = props;\n\n  const convertToDefEventPara = (name, value) => ({\n    target: {\n      name,\n      value\n    }\n  });\n\n  return (\n    <FormControl>\n      <FormControlLabel\n        control={\n          <MuiCheckbox\n            name={name}\n            color=\"primary\"\n            checked={value}\n            onChange={(e) =>\n              onChange(convertToDefEventPara(name, e.target.checked))\n            }\n          />\n        }\n        label={label}\n      />\n    </FormControl>\n  );\n}\n","import React from 'react';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nexport default function DatePicker(props) {\n  const { name, label, value, onChange, size } = props;\n\n  const convertToDefEventPara = (name, value) => ({\n    target: {\n      name,\n      value\n    }\n  });\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <KeyboardDatePicker\n        variant=\"inline\"\n        inputVariant=\"outlined\"\n        label={label}\n        format=\"MMM/dd/yyyy\"\n        name={name}\n        value={value}\n        onChange={(date) => onChange(convertToDefEventPara(name, date))}\n        size={size}\n      />\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nexport function useForm(initialFValues, validateOnChange = false, validate) {\n  const [values, setValues] = useState(initialFValues);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n    if (validateOnChange) validate({ [name]: value });\n  };\n\n  const resetForm = () => {\n    setValues(initialFValues);\n    setErrors({});\n  };\n\n  return {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiFormControl-root': {\n      width: '80%',\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nexport function Form(props) {\n  const classes = useStyles();\n  const { children, ...other } = props;\n  return (\n    <form className={classes.root} autoComplete=\"off\" {...other}>\n      {props.children}\n    </form>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Hidden\n} from '@material-ui/core';\nimport Controls from 'src/components/controls/Controls';\nimport { useForm, Form } from 'src/components/useForm';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useCardStyles = makeStyles({\n  rightRoot: {\n    padding: '1px',\n    marginBottom: '5px'\n  },\n  leftRoot: {\n    padding: '1px',\n    marginBottom: '5px',\n    marginRight: '5px'\n  },\n  root: {\n    padding: '1px',\n    marginBottom: '5px'\n  }\n});\n\nexport default function InvoiceTransactionForm(props) {\n  const cardClasses = useCardStyles();\n\n  const { addOrEdit, recordForEdit } = props;\n  const { branchesSelectOptions } = props;\n  const {\n    branchParamsOptions,\n    branchesOptions,\n    initialBranchId,\n    initialBranchParamOption,\n    initialBranchCommunicationId,\n    initialSupplierId,\n    initialSupplierCommunicationId,\n    initialTransporterId,\n    initialTransporterCommunicationId\n  } = branchesSelectOptions;\n\n  console.log('branchParamsOptions: ' + JSON.stringify(branchParamsOptions));\n  console.log('branchesOptions: ' + JSON.stringify(branchesOptions));\n\n  const [invoiceStatusIdOptions, setInvoiceStatusIdOptions] = useState([\n    { id: '1', title: 'Status 1' },\n    { id: '2', title: 'Status 2' },\n    { id: '3', title: 'Status 3' },\n    { id: '4', title: 'Status 4' },\n    { id: '5', title: 'Status 5' },\n    { id: '6', title: 'Status 6' },\n    { id: '7', title: 'Status 7' },\n    { id: '8', title: 'Status 8' },\n    { id: '9', title: 'Status 9' },\n    { id: '10', title: 'Status 10' }\n  ]);\n\n  const [branchIdOptions, setBranchIdOptions] = useState(branchesOptions);\n  const [\n    branchCommunicationIdOptions,\n    setBranchCommunicationIdOptions\n  ] = useState(\n    initialBranchParamOption ? initialBranchParamOption['communications'] : []\n  );\n\n  const [supplierIdOptions, setSupplierIdOptions] = useState(\n    initialBranchParamOption ? initialBranchParamOption['suppliers'] : []\n  );\n\n  const [\n    supplierCommunicationIdOptions,\n    setSupplierCommunicationIdOptions\n  ] = useState(\n    initialBranchParamOption && initialSupplierId\n      ? initialBranchParamOption['supplierCommunications'][initialSupplierId]\n      : []\n  );\n\n  const [transporterIdOptions, setTransporterIdOptions] = useState(\n    initialBranchParamOption ? initialBranchParamOption['transporters'] : []\n  );\n\n  const [\n    transporterCommunicationIdOptions,\n    setTransporterCommunicationIdOptions\n  ] = useState(\n    initialBranchParamOption && initialTransporterId\n      ? initialBranchParamOption['transporterCommunications'][\n          initialTransporterId\n        ]\n      : []\n  );\n\n  const [selectedBranchId, setSelectedBranchId] = useState(initialBranchId);\n\n  const [\n    selectedBranchCommunicationId,\n    setSelectedBranchCommunicationId\n  ] = useState(initialBranchCommunicationId);\n\n  const [selectedSupplierId, setSelectedSupplierId] = useState(\n    initialSupplierId\n  );\n\n  const [\n    selectedSupplierCommunicationId,\n    setSelectedSupplierCommunicationId\n  ] = useState(initialSupplierCommunicationId);\n\n  const [selectedTransporterId, setSelectedTransporterId] = useState(\n    initialTransporterId\n  );\n\n  const [\n    selectedTransporterCommunicationId,\n    setSelectedTransporterCommunicationId\n  ] = useState(initialTransporterCommunicationId);\n  ////////////////////////////////////////\n\n  const initialFValues = {\n    branchId: selectedBranchId,\n    branchCommunicationId: selectedBranchCommunicationId,\n    invoiceReceivedDate: new Date(),\n    invoiceDate: new Date(),\n    invoiceNumber: '',\n    invoiceStatusId: 1,\n    lrdate: new Date(),\n    lrnumber: '',\n    numberOfParcels: 1,\n    supplierId: selectedSupplierId,\n    supplierCommunicationId: selectedSupplierCommunicationId,\n    transporterId: selectedTransporterId,\n    transporterCommunicationId: initialTransporterCommunicationId\n  };\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    // if ('fullName' in fieldValues)\n    //   temp.fullName = fieldValues.fullName ? '' : 'This field is required.';\n    // if ('email' in fieldValues)\n    //   temp.email = /$^|.+@.+..+/.test(fieldValues.email)\n    //     ? ''\n    //     : 'Email is not valid.';\n    // if ('mobile' in fieldValues)\n    //   temp.mobile =\n    //     fieldValues.mobile.length > 9 ? '' : 'Minimum 10 numbers required.';\n    // if ('departmentId' in fieldValues)\n    //   temp.departmentId =\n    //     fieldValues.departmentId.length != 0 ? '' : 'This field is required.';\n    setErrors({\n      ...temp\n    });\n\n    if (fieldValues == values) return Object.values(temp).every((x) => x == '');\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  /////////////////////////////////////////\n\n  const handleBranchIdChange = (value) => {\n    values.branchCommunicationId = '';\n    values.supplierId = '';\n    values.supplierCommunicationId = '';\n    values.transporterId = '';\n    values.transporterCommunicationId = '';\n\n    values.branchId = value;\n\n    if (value) {\n      const currentBranchParamOption = branchParamsOptions[value];\n      setBranchCommunicationIdOptions(\n        currentBranchParamOption['communications']\n      );\n      setSupplierIdOptions(currentBranchParamOption['suppliers']);\n      setTransporterIdOptions(currentBranchParamOption['transporters']);\n      setSupplierCommunicationIdOptions([]);\n      setTransporterCommunicationIdOptions([]);\n    } else {\n      setBranchCommunicationIdOptions([]);\n      setSupplierIdOptions([]);\n      setTransporterIdOptions([]);\n      setSupplierCommunicationIdOptions([]);\n      setTransporterCommunicationIdOptions([]);\n    }\n  };\n\n  const handleBranchIdCommunicationIdChange = (value) => {\n    values.branchCommunicationId = value;\n  };\n\n  const handleSupplierIdChange = (value) => {\n    values.supplierCommunicationId = '';\n\n    values.supplierId = value;\n\n    if (value) {\n      const currentBranchParamOption = branchParamsOptions[values.branchId];\n\n      setSupplierCommunicationIdOptions(\n        currentBranchParamOption['supplierCommunications'][value]\n      );\n    } else {\n      setSupplierCommunicationIdOptions([]);\n    }\n  };\n\n  const handleSupplierCommunicationIdChange = (value) => {\n    values.supplierCommunicationId = value;\n  };\n\n  const handleTransporterIdChange = (value) => {\n    values.transporterCommunicationId = '';\n\n    values.transporterId = value;\n    if (value) {\n      const currentBranchParamOption = branchParamsOptions[values.branchId];\n      setTransporterCommunicationIdOptions(\n        currentBranchParamOption['transporterCommunications'][value]\n      );\n    } else {\n      setTransporterCommunicationIdOptions([]);\n    }\n  };\n\n  const handleTransporterCommunicationIdChange = (value) => {\n    values.transporterCommunicationId = value;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  useEffect(() => {\n    if (recordForEdit != null)\n      setValues({\n        ...recordForEdit\n      });\n  }, [recordForEdit]);\n\n  const getBranchDetailsGrid = () => {\n    return (\n      <Grid item lg={12} md={12} xl={12} xs={12}>\n        <Card className={cardClasses.root}>\n          <CardHeader title=\"Branch Details\" />\n          <CardContent sx={{ padding: '0px !important' }}>\n            <Grid container spacing={1}>\n              <Grid item lg={6} md={6} xl={6} xs={6}>\n                <Controls.Select\n                  name=\"branchId\"\n                  label=\"Branch Code\"\n                  value={values.branchId}\n                  options={branchIdOptions}\n                  onChange={(e) => {\n                    handleBranchIdChange(e.target.value);\n                    handleInputChange(e);\n                  }}\n                  error={errors.branchId}\n                  size=\"small\"\n                />\n              </Grid>\n              <Grid item lg={6} md={6} xl={6} xs={6}>\n                <Controls.Select\n                  name=\"branchCommunicationId\"\n                  label=\"Branch Communication Code\"\n                  value={values.branchCommunicationId}\n                  options={branchCommunicationIdOptions}\n                  onChange={(e) => {\n                    handleBranchIdCommunicationIdChange(e.target.value);\n                    handleInputChange(e);\n                  }}\n                  error={errors.branchCommunicationId}\n                  size=\"small\"\n                />\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  };\n\n  const toggleBranchDetailsView = () => {\n    if (!branchIdOptions && !branchCommunicationIdOptions) return;\n    // if (branchIdOptions.length <= 1 && branchCommunicationIdOptions.length <= 1)\n    //   return <Hidden xsUp>{getBranchDetailsGrid()}</Hidden>;\n    return getBranchDetailsGrid();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Grid container>\n        {toggleBranchDetailsView()}\n        <Grid item lg={8} md={8} xl={8} xs={8}>\n          <Card className={cardClasses.leftRoot}>\n            <CardHeader title=\"Invoice Details\" />\n            <CardContent sx={{ padding: '0px !important' }}>\n              <Grid container spacing={1}>\n                <Grid item lg={6} md={6} xl={6} xs={6}>\n                  <Controls.DatePicker\n                    label=\"Invoice Received Date\"\n                    name=\"invoiceReceivedDate\"\n                    value={values.invoiceReceivedDate}\n                    onChange={handleInputChange}\n                    error={errors.invoiceReceivedDate}\n                    size=\"small\"\n                  />\n                </Grid>\n                <Grid item lg={6} md={6} xl={6} xs={6}>\n                  <Controls.DatePicker\n                    label=\"Invoice Date\"\n                    name=\"invoiceDate\"\n                    value={values.invoiceDate}\n                    onChange={handleInputChange}\n                    error={errors.invoiceDate}\n                    size=\"small\"\n                  />\n                </Grid>\n                <Grid item lg={6} md={6} xl={6} xs={6}>\n                  <Controls.Input\n                    label=\"Invoice Number\"\n                    name=\"invoiceNumber\"\n                    value={values.invoiceNumber}\n                    onChange={handleInputChange}\n                    error={errors.invoiceNumber}\n                    size=\"small\"\n                  />\n                </Grid>\n                <Grid item lg={6} md={6} xl={6} xs={6}>\n                  <Controls.Select\n                    label=\"Invoice Status\"\n                    name=\"invoiceStatusId\"\n                    value={values.invoiceStatusId}\n                    options={invoiceStatusIdOptions}\n                    onChange={handleInputChange}\n                    error={errors.invoiceStatusId}\n                    size=\"small\"\n                  />\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} md={4} xl={4} xs={4}>\n          <Card className={cardClasses.rightRoot}>\n            <CardHeader title=\"Supplier Details\" />\n            <CardContent sx={{ padding: '0px !important' }}>\n              <Grid container spacing={1}>\n                <Grid item lg={12} md={12} xl={12} xs={12}>\n                  <Controls.Select\n                    label=\"Supplier Code\"\n                    name=\"supplierId\"\n                    value={values.supplierId}\n                    options={supplierIdOptions}\n                    onChange={(e) => {\n                      handleSupplierIdChange(e.target.value);\n                      handleInputChange(e);\n                    }}\n                    error={errors.supplierId}\n                    size=\"small\"\n                  />\n                </Grid>\n                <Grid item lg={12} md={12} xl={12} xs={12}>\n                  <Controls.Select\n                    label=\"Supplier Communication\"\n                    name=\"supplierCommunicationId\"\n                    value={values.supplierCommunicationId}\n                    options={supplierCommunicationIdOptions}\n                    onChange={(e) => {\n                      handleSupplierCommunicationIdChange(e.target.value);\n                      handleInputChange(e);\n                    }}\n                    error={errors.supplierCommunicationId}\n                    size=\"small\"\n                  />\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={8} md={8} xl={8} xs={8}>\n          <Card className={cardClasses.leftRoot}>\n            <CardHeader title=\"LR Details\" />\n            <CardContent sx={{ padding: '0px !important' }}>\n              <Grid container spacing={1}>\n                <Grid item lg={6} md={6} xl={6} xs={6}>\n                  <Controls.DatePicker\n                    label=\"LR Date\"\n                    name=\"lrdate\"\n                    value={values.lrdate}\n                    onChange={handleInputChange}\n                    error={errors.lrdate}\n                    size=\"small\"\n                  />\n                </Grid>\n                <Grid item lg={6} md={6} xl={6} xs={6}>\n                  <Controls.Input\n                    label=\"Number Of Parcels\"\n                    name=\"numberOfParcels\"\n                    value={values.numberOfParcels}\n                    onChange={handleInputChange}\n                    error={errors.numberOfParcels}\n                    size=\"small\"\n                  />\n                </Grid>\n                <Grid item lg={6} md={6} xl={6} xs={6}>\n                  <Controls.Input\n                    label=\"LR Number\"\n                    name=\"lrnumber\"\n                    value={values.lrnumber}\n                    onChange={handleInputChange}\n                    error={errors.lrnumber}\n                    size=\"small\"\n                  />\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} md={4} xl={4} xs={4}>\n          <Card className={cardClasses.rightRoot}>\n            <CardHeader title=\"Transporter Details\" />\n            <CardContent sx={{ padding: '0px !important' }}>\n              <Grid container spacing={1}>\n                <Grid item lg={12} md={12} xl={12} xs={12}>\n                  <Controls.Select\n                    label=\"Transporter Code\"\n                    name=\"transporterId\"\n                    value={values.transporterId}\n                    options={transporterIdOptions}\n                    onChange={(e) => {\n                      handleTransporterIdChange(e.target.value);\n                      handleInputChange(e);\n                    }}\n                    error={errors.transporterId}\n                    size=\"small\"\n                  />\n                </Grid>\n                <Grid item lg={12} md={12} xl={12} xs={12}>\n                  <Controls.Select\n                    label=\"Transporter Communication\"\n                    name=\"transporterCommunicationId\"\n                    value={values.transporterCommunicationId}\n                    options={transporterCommunicationIdOptions}\n                    onChange={(e) => {\n                      handleTransporterCommunicationIdChange(e.target.value);\n                      handleInputChange(e);\n                    }}\n                    error={errors.transporterCommunicationId}\n                    size=\"small\"\n                  />\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          marginTop: '4px'\n        }}\n      >\n        <Controls.Button\n          type=\"submit\"\n          text=\"Submit\"\n          sx={{\n            mr: 2\n          }}\n        />\n        <Controls.Button text=\"Reset\" color=\"default\" onClick={resetForm} />\n      </Box>\n    </Form>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  makeStyles,\n  TablePagination,\n  TableSortLabel\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  // table: {\n  //   marginTop: theme.spacing(3),\n  //   '& thead th': {\n  //     fontWeight: '600',\n  //     color: theme.palette.primary.main,\n  //     backgroundColor: theme.palette.primary.light\n  //   },\n  //   '& tbody td': {\n  //     fontWeight: '300'\n  //   },\n  //   '& tbody tr:hover': {\n  //     backgroundColor: '#fffbf2',\n  //     cursor: 'pointer'\n  //   }\n  // }\n}));\n\nexport default function useTable(records, headCells, filterFn) {\n  const classes = useStyles();\n\n  const pages = [5, 10, 25];\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(pages[page]);\n  const [order, setOrder] = useState();\n  const [orderBy, setOrderBy] = useState();\n\n  const TblContainer = (props) => (\n    <Table className={classes.table} align=\"center\">\n      {props.children}\n    </Table>\n  );\n\n  const TblHead = (props) => {\n    const handleSortRequest = (cellId) => {\n      const isAsc = orderBy === cellId && order === 'asc';\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(cellId);\n    };\n\n    return (\n      <TableHead>\n        <TableRow>\n          {headCells.map((headCell) => (\n            <TableCell\n              key={headCell.id}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              {headCell.disableSorting ? (\n                headCell.label\n              ) : (\n                <TableSortLabel\n                  active={orderBy === headCell.id}\n                  direction={orderBy === headCell.id ? order : 'asc'}\n                  onClick={() => {\n                    handleSortRequest(headCell.id);\n                  }}\n                >\n                  {headCell.label}\n                </TableSortLabel>\n              )}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleRowsPerPageChange = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const TblPagination = () => (\n    <TablePagination\n      component=\"div\"\n      page={page}\n      rowsPerPageOptions={pages}\n      rowsPerPage={rowsPerPage}\n      count={records.length}\n      onPageChange={handlePageChange}\n      onRowsPerPageChange={handleRowsPerPageChange}\n    />\n  );\n\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n\n  function getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  const recordsAfterPagingAndSorting = () => {\n    return stableSort(\n      filterFn.fn(records),\n      getComparator(order, orderBy)\n    ).slice(page * rowsPerPage, (page + 1) * rowsPerPage);\n  };\n\n  return {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  };\n}\n","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\nimport Controls from './controls/Controls';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n  dialogWrapper: {\n    padding: theme.spacing(2),\n    position: 'absolute',\n    top: theme.spacing(5)\n  },\n  dialogTitle: {\n    padding: '7px 7px !important'\n  }\n}));\n\nexport default function Popup(props) {\n  const { title, children, openPopup, setOpenPopup } = props;\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      open={openPopup}\n      maxWidth=\"md\"\n      classes={{ paper: classes.dialogWrapper }}\n    >\n      <DialogTitle className={classes.dialogTitle}>\n        <div style={{ display: 'flex' }}>\n          <Typography variant=\"h3\" component=\"div\" style={{ flexGrow: 1 }}>\n            {title}\n          </Typography>\n          <Controls.ActionButton\n            color=\"secondary\"\n            onClick={() => {\n              setOpenPopup(false);\n            }}\n          >\n            <CloseIcon />\n          </Controls.ActionButton>\n        </div>\n      </DialogTitle>\n      <DialogContent dividers>{children}</DialogContent>\n    </Dialog>\n  );\n}\n","import React, { useState } from 'react';\nimport InvoiceTransactionForm from 'src/pages/InvoiceTransactionForm';\nimport {\n  Paper,\n  makeStyles,\n  TableBody,\n  TableRow,\n  TableCell,\n  Toolbar,\n  InputAdornment\n} from '@material-ui/core';\nimport useTable from 'src/components/useTable';\nimport Controls from 'src/components/controls/Controls';\nimport { Search } from '@material-ui/icons';\nimport AddIcon from '@material-ui/icons/Add';\nimport Popup from 'src/components/Popup';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Helmet } from 'react-helmet';\nimport { Box, Card, CardHeader, Container, Grid } from '@material-ui/core';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport moment from 'moment';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3)\n  },\n  searchInput: {\n    width: '85%'\n  }\n}));\n\nconst headCells = [\n  { id: 'invoiceNumber', label: 'Invoice Number' },\n  { id: 'invoiceReceivedDate', label: 'Invoice Recieved Date' },\n  { id: 'lrnumber', label: 'LR Number' },\n  { id: 'lrdate', label: 'LR Date' },\n  { id: 'numberOfParcels', label: 'Parcel Count' },\n  { id: 'actions', label: 'Actions', disableSorting: true }\n];\n\nexport default function InvoiceTransactions(props) {\n  const classes = useStyles();\n  const { token, setToken, company, setCompany } = props;\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [popupActionType, setPopupActionType] = useState('add');\n  const [records, setRecords] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filterFn, setFilterFn] = useState({\n    fn: (items) => {\n      return items;\n    }\n  });\n  const [openPopup, setOpenPopup] = useState(false);\n  const branchesSelectOptions = transformBranches(company);\n\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(records, headCells, filterFn);\n\n  const handleSearch = (e) => {\n    let target = e.target;\n    setFilterFn({\n      fn: (items) => {\n        if (target.value == '' || !target.value) return items;\n        else\n          return items.filter(\n            (x) =>\n              x.invoiceNumber\n                .toLowerCase()\n                .includes(target.value.toLowerCase()) ||\n              x.lrnumber.toLowerCase().includes(target.value.toLowerCase())\n          );\n      }\n    });\n  };\n\n  const addOrEdit = (employee, resetForm) => {\n    // if (employee.id == 0) employeeService.insertEmployee(employee);\n    // else employeeService.updateEmployee(employee);\n    // resetForm();\n    // setRecordForEdit(null);\n    // setOpenPopup(false);\n    // setRecords(employeeService.getAllEmployees());\n    //add api call\n  };\n\n  const openInPopup = (actionType, item) => {\n    setPopupActionType(actionType);\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const fetchInvoices = () => {\n    axios\n      .get(\n        `api/Transaction/GetAllInvoicesByCompany/?cmpID=${company.companyId}`,\n        {\n          headers: { Authorization: `Bearer ${token.jwtToken}` }\n        }\n      )\n      .then((res) => {\n        setLoading(false);\n        console.log(JSON.stringify(res.data));\n        setRecords(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  React.useEffect(() => {\n    setLoading(true);\n    fetchInvoices();\n  }, [company]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Invoice Inward</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n          <Grid container spacing={3}>\n            <Grid item lg={12} md={12} xl={12} xs={12}>\n              <Card>\n                <CardHeader title=\"\" />\n                <PerfectScrollbar>\n                  <Paper className={classes.pageContent}>\n                    <Toolbar className={classes.seachToolbar}>\n                      <Box display=\"flex\" flexGrow={1}>\n                        <Controls.Input\n                          label=\"Search\"\n                          className={classes.searchInput}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <Search />\n                              </InputAdornment>\n                            )\n                          }}\n                          onChange={handleSearch}\n                        />\n                      </Box>\n                      <Controls.Button\n                        text=\"\"\n                        variant=\"outlined\"\n                        startIcon={<AddIcon />}\n                        onClick={() => {\n                          openInPopup('add', null);\n                        }}\n                      />\n                    </Toolbar>\n                    <TblContainer>\n                      <TblHead />\n                      <TableBody>\n                        {recordsAfterPagingAndSorting().map((item) => (\n                          <TableRow key={item.id}>\n                            <TableCell>{item.invoiceNumber}</TableCell>\n                            <TableCell>\n                              {moment(item.invoiceReceivedDate).format(\n                                'DD/MM/YYYY'\n                              )}\n                            </TableCell>\n                            <TableCell>{item.lrnumber}</TableCell>\n                            <TableCell>\n                              {moment(item.lrdate).format('DD/MM/YYYY')}\n                            </TableCell>\n                            <TableCell>{item.numberOfParcels}</TableCell>\n                            <TableCell>\n                              <Controls.ActionButton\n                                color=\"primary\"\n                                onClick={() => {\n                                  openInPopup('edit', item);\n                                }}\n                              >\n                                <EditOutlinedIcon fontSize=\"small\" />\n                              </Controls.ActionButton>\n                              <Controls.ActionButton color=\"secondary\">\n                                <CloseIcon fontSize=\"small\" />\n                              </Controls.ActionButton>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </TblContainer>\n                    <TblPagination />\n                  </Paper>\n                  <Popup\n                    title={\n                      popupActionType === 'edit'\n                        ? 'Edit Invoice'\n                        : 'Add Invoice'\n                    }\n                    openPopup={openPopup}\n                    setOpenPopup={setOpenPopup}\n                  >\n                    <InvoiceTransactionForm\n                      recordForEdit={recordForEdit}\n                      addOrEdit={addOrEdit}\n                      token={token}\n                      setToken={setToken}\n                      company={company}\n                      setCompany={setCompany}\n                      branchesSelectOptions={branchesSelectOptions}\n                    />\n                  </Popup>\n                </PerfectScrollbar>\n              </Card>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </>\n  );\n}\n\nfunction transformCommunications(branch) {\n  const communicationOptions = [];\n\n  const communications = branch.branchCommunication;\n  if (!communications) return communicationOptions;\n  for (let i = 0; i < communications.length; i++) {\n    const branchCommunication = communications[i];\n    const address = branchCommunication.communication?.address;\n\n    const title = address?.addressLine1\n      ? address?.addressLine1 + ', ' + address?.addressLine2\n      : address?.addressLine2;\n\n    communicationOptions.push({\n      id: '' + branchCommunication.id,\n      title: title\n    });\n  }\n\n  return communicationOptions;\n}\n\nfunction transformSites(branch) {\n  const sitesOptions = [];\n  const sitesCommunicationOptions = {};\n\n  const sites = branch.branchSite;\n  if (!sites) return sitesOptions;\n\n  for (let i = 0; i < sites.length; i++) {\n    const site = sites[i]?.site;\n    if (site) {\n      sitesOptions.push({ id: '' + site.id, title: site.code });\n\n      const siteCommunicationOptions = [];\n      const siteCommunications = site.siteCommunication;\n      if (siteCommunications) {\n        for (let j = 0; j < siteCommunications.length; j++) {\n          const siteCommunication = siteCommunications[j];\n          if (siteCommunication) {\n            const address = siteCommunication.communication.address;\n            const title = address?.addressLine1\n              ? address?.addressLine1 + ', ' + address?.addressLine2\n              : address?.addressLine2;\n\n            siteCommunicationOptions.push({\n              id: '' + siteCommunication.id,\n              title: title\n            });\n          }\n        }\n      }\n\n      sitesCommunicationOptions[site.id] = siteCommunicationOptions;\n    }\n  }\n  return { sitesOptions, sitesCommunicationOptions };\n}\n\nfunction transformSuppliers(branch) {\n  const suppliersOptions = [];\n  const suppliersCommunicationOptions = {};\n\n  const suppliers = branch.branchSupplier;\n  if (!suppliers) return suppliersOptions;\n\n  for (let i = 0; i < suppliers.length; i++) {\n    const supplier = suppliers[i]?.supplier;\n    if (supplier) {\n      suppliersOptions.push({ id: '' + supplier.id, title: supplier.code });\n\n      const supplierCommunicationOptions = [];\n      const supplierCommunications = supplier.supplierCommunication;\n      if (supplierCommunications) {\n        for (let j = 0; j < supplierCommunications.length; j++) {\n          const supplierCommunication = supplierCommunications[j];\n          if (supplierCommunication) {\n            const address = supplierCommunication.communication.address;\n            const title = address?.addressLine1\n              ? address?.addressLine1 + ', ' + address?.addressLine2\n              : address?.addressLine2;\n\n            supplierCommunicationOptions.push({\n              id: '' + supplierCommunication.id,\n              title: title\n            });\n          }\n        }\n      }\n\n      suppliersCommunicationOptions[supplier.id] = supplierCommunicationOptions;\n    }\n  }\n  return { suppliersOptions, suppliersCommunicationOptions };\n}\n\nfunction transformTransporters(branch) {\n  const transportersOptions = [];\n  const transportersCommunicationOptions = {};\n\n  const transporters = branch.branchTransporter;\n  if (!transporters) return transportersOptions;\n\n  for (let i = 0; i < transporters.length; i++) {\n    const transporter = transporters[i]?.transporter;\n    if (transporter) {\n      transportersOptions.push({\n        id: '' + transporter.id,\n        title: transporter.code\n      });\n\n      const transporterCommunicationOptions = [];\n      const transporterCommunications = transporter.transporterCommunication;\n      if (transporterCommunications) {\n        for (let j = 0; j < transporterCommunications.length; j++) {\n          const transporterCommunication = transporterCommunications[j];\n          if (transporterCommunication) {\n            const address = transporterCommunication.communication.address;\n            const title = address?.addressLine1\n              ? address?.addressLine1 + ', ' + address?.addressLine2\n              : address?.addressLine2;\n\n            transporterCommunicationOptions.push({\n              id: '' + transporterCommunication.id,\n              title: title\n            });\n          }\n        }\n      }\n\n      transportersCommunicationOptions[\n        transporter.id\n      ] = transporterCommunicationOptions;\n    }\n  }\n  return { transportersOptions, transportersCommunicationOptions };\n}\n\nfunction transformBranches(company) {\n  const branchParamsOptions = {};\n  const branchesOptions = [];\n\n  for (let i = 0; i < company.branches.length; i++) {\n    const branch = company.branches[i];\n\n    if (branch) {\n      const branchId = branch.branchId;\n      const branchFilterOption = {\n        id: '' + branchId,\n        title: branch.branchCode\n      };\n\n      branchesOptions.push(branchFilterOption);\n\n      const branchOptions = {};\n      branchOptions['communications'] = transformCommunications(branch);\n\n      const { sitesOptions, sitesCommunicationOptions } = transformSites(\n        branch\n      );\n      branchOptions['sites'] = sitesOptions;\n      branchOptions['siteCommunications'] = sitesCommunicationOptions;\n\n      const {\n        suppliersOptions,\n        suppliersCommunicationOptions\n      } = transformSuppliers(branch);\n      branchOptions['suppliers'] = suppliersOptions;\n      branchOptions['supplierCommunications'] = suppliersCommunicationOptions;\n\n      const {\n        transportersOptions,\n        transportersCommunicationOptions\n      } = transformTransporters(branch);\n      branchOptions['transporters'] = transportersOptions;\n      branchOptions[\n        'transporterCommunications'\n      ] = transportersCommunicationOptions;\n\n      branchParamsOptions[branchId] = branchOptions;\n    }\n  }\n\n  let initialBranchId = '';\n  let initialBranchCommunicationId = '';\n  let initialBranchParamOption;\n  if (branchesOptions.length === 1) {\n    initialBranchId = branchesOptions[0].id;\n\n    initialBranchParamOption = branchParamsOptions[initialBranchId];\n\n    const branchCommunicationOptions =\n      initialBranchParamOption['communications'];\n    if (branchCommunicationOptions.length === 1) {\n      initialBranchCommunicationId = branchCommunicationOptions[0].id;\n    }\n  }\n\n  const initialSupplierId = '';\n  const initialSupplierCommunicationId = '';\n  const initialTransporterId = '';\n  const initialTransporterCommunicationId = '';\n\n  return {\n    branchParamsOptions: branchParamsOptions,\n    branchesOptions: branchesOptions,\n    initialBranchId,\n    initialBranchParamOption,\n    initialBranchCommunicationId,\n    initialSupplierId,\n    initialSupplierCommunicationId,\n    initialTransporterId,\n    initialTransporterCommunicationId\n  };\n}\n","import React, { useState } from 'react';\r\nimport InvoiceTransactionForm from 'src/pages/InvoiceTransactionForm';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment\r\n} from '@material-ui/core';\r\nimport useTable from 'src/components/useTable';\r\nimport Controls from 'src/components/controls/Controls';\r\nimport { Search } from '@material-ui/icons';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Popup from 'src/components/Popup';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Box, Card, CardHeader, Container, Grid } from '@material-ui/core';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n      width: '85%'\r\n    }\r\n  }));\r\n\r\n  const headCells = [\r\n    { id: 'branchCode', label: 'Branch code' },\r\n    { id: 'branchName', label: 'Branch Name' },\r\n    { id: 'displayName', label: 'Display Name' },\r\n    { id: 'isActive', label: 'Active' },\r\n    { id: 'creationTime', label: 'Created On' },\r\n  ];\r\n\r\n  export default function Branch(props) {\r\n    const classes = useStyles();\r\n    const { token, setToken, company, setCompany } = props;\r\n    const [recordForEdit, setRecordForEdit] = useState(null);\r\n    const [popupActionType, setPopupActionType] = useState('add');\r\n    const [records, setRecords] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [filterFn, setFilterFn] = useState({\r\n      fn: (items) => {\r\n        return items;\r\n      }\r\n    });\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n      } = useTable(records, headCells, filterFn);\r\n\r\n      const handleSearch = (e) => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n          fn: (items) => {\r\n            if (target.value == '' || !target.value) return items;\r\n            else\r\n              return items.filter(\r\n                (x) =>\r\n                  x.branchCode\r\n                    .toLowerCase()\r\n                    .includes(target.value.toLowerCase()) ||\r\n                  x.branchName.toLowerCase().includes(target.value.toLowerCase())\r\n              );\r\n          }\r\n        });\r\n      };\r\n\r\n      const addOrEdit = (employee, resetForm) => {\r\n        // if (employee.id == 0) employeeService.insertEmployee(employee);\r\n        // else employeeService.updateEmployee(employee);\r\n        // resetForm();\r\n        // setRecordForEdit(null);\r\n        // setOpenPopup(false);\r\n        // setRecords(employeeService.getAllEmployees());\r\n        //add api call\r\n      };\r\n    \r\n      const openInPopup = (actionType, item) => {\r\n        setPopupActionType(actionType);\r\n        setRecordForEdit(item);\r\n        setOpenPopup(true);\r\n      };\r\n\r\n      const fetchBranches = () => {\r\n        axios\r\n          .get(\r\n            `api/Definition/GetAllBranchesByCompany/?cmpID=${company.companyId}`,\r\n            {\r\n              headers: { Authorization: `Bearer ${token.jwtToken}` }\r\n            }\r\n          )\r\n          .then((res) => {\r\n            setLoading(false);\r\n            console.log(JSON.stringify(res.data));\r\n            setRecords(res.data);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      };\r\n\r\n      React.useEffect(() => {\r\n        setLoading(true);\r\n        fetchBranches();\r\n      }, [company]);\r\n\r\n      return (\r\n        <>\r\n          <Helmet>\r\n            <title>Branch</title>\r\n          </Helmet>\r\n          <Box\r\n            sx={{\r\n              backgroundColor: 'background.default',\r\n              minHeight: '100%',\r\n              py: 3\r\n            }}\r\n          >\r\n            <Container maxWidth={false}>\r\n              <Grid container spacing={3}>\r\n                <Grid item lg={12} md={12} xl={12} xs={12}>\r\n                  <Card>\r\n                    <CardHeader title=\"\" />\r\n                    <PerfectScrollbar>\r\n                      <Paper className={classes.pageContent}>\r\n                        <Toolbar className={classes.seachToolbar}>\r\n                          <Box display=\"flex\" flexGrow={1}>\r\n                            <Controls.Input\r\n                              label=\"Search\"\r\n                              className={classes.searchInput}\r\n                              InputProps={{\r\n                                startAdornment: (\r\n                                  <InputAdornment position=\"start\">\r\n                                    <Search />\r\n                                  </InputAdornment>\r\n                                )\r\n                              }}\r\n                              onChange={handleSearch}\r\n                            />\r\n                          </Box>\r\n                          <Controls.Button\r\n                            text=\"\"\r\n                            variant=\"outlined\"\r\n                            startIcon={<AddIcon />}\r\n                            onClick={() => {\r\n                              openInPopup('add', null);\r\n                            }}\r\n                          />\r\n                        </Toolbar>\r\n                        <TblContainer>\r\n                          <TblHead />\r\n                          <TableBody>\r\n                            {recordsAfterPagingAndSorting().map((item) => (\r\n                              <TableRow key={item.id}>\r\n                                <TableCell>{item.branchCode}</TableCell>\r\n                                <TableCell>{item.branchName}</TableCell>\r\n                                <TableCell>{item.displayName}</TableCell>                             \r\n                                <TableCell>{item.isActive.toString() }</TableCell>\r\n                                <TableCell>\r\n                              {moment(item.creationTime).format('DD/MM/YYYY')}\r\n                            </TableCell>\r\n                                <TableCell>\r\n                              <Controls.ActionButton\r\n                                color=\"primary\"\r\n                                onClick={() => {\r\n                                  openInPopup('edit', item);\r\n                                }}\r\n                              >\r\n                                <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton color=\"secondary\">\r\n                                <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                            </TableCell>\r\n                              </TableRow>\r\n                            ))}\r\n                          </TableBody>\r\n                        </TblContainer>\r\n                        <TblPagination />\r\n                      </Paper>\r\n                      <Popup\r\n                        title={\r\n                          popupActionType === 'edit'\r\n                            ? 'Edit Branch'\r\n                            : 'Add Branch'\r\n                        }\r\n                        openPopup={openPopup}\r\n                        setOpenPopup={setOpenPopup}\r\n                      >\r\n                      </Popup>\r\n                    </PerfectScrollbar>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n          </Box>\r\n        </>\r\n      );\r\n  }","import React, { useState } from 'react';\r\nimport InvoiceTransactionForm from 'src/pages/InvoiceTransactionForm';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment\r\n} from '@material-ui/core';\r\nimport useTable from 'src/components/useTable';\r\nimport Controls from 'src/components/controls/Controls';\r\nimport { Search } from '@material-ui/icons';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Popup from 'src/components/Popup';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Box, Card, CardHeader, Container, Grid } from '@material-ui/core';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n      width: '85%'\r\n    }\r\n  }));\r\n\r\n  const headCells = [\r\n    { id: 'siteCode', label: 'Site code' },\r\n    { id: 'siteName', label: 'Site Name' },\r\n    { id: 'displayName', label: 'Display Name' },\r\n    { id: 'isActive', label: 'Active' },\r\n    { id: 'creationTime', label: 'Created On' },\r\n  ];\r\n\r\n  export default function Site(props) {\r\n    const classes = useStyles();\r\n    const { token, setToken, company, setCompany } = props;\r\n    const [recordForEdit, setRecordForEdit] = useState(null);\r\n    const [popupActionType, setPopupActionType] = useState('add');\r\n    const [records, setRecords] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [filterFn, setFilterFn] = useState({\r\n      fn: (items) => {\r\n        return items;\r\n      }\r\n    });\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n      } = useTable(records, headCells, filterFn);\r\n\r\n      const handleSearch = (e) => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n          fn: (items) => {\r\n            if (target.value == '' || !target.value) return items;\r\n            else\r\n              return items.filter(\r\n                (x) =>\r\n                  x.siteCode\r\n                    .toLowerCase()\r\n                    .includes(target.value.toLowerCase()) ||\r\n                  x.siteName.toLowerCase().includes(target.value.toLowerCase())\r\n              );\r\n          }\r\n        });\r\n      };\r\n\r\n      const addOrEdit = (employee, resetForm) => {\r\n        // if (employee.id == 0) employeeService.insertEmployee(employee);\r\n        // else employeeService.updateEmployee(employee);\r\n        // resetForm();\r\n        // setRecordForEdit(null);\r\n        // setOpenPopup(false);\r\n        // setRecords(employeeService.getAllEmployees());\r\n        //add api call\r\n      };\r\n    \r\n      const openInPopup = (actionType, item) => {\r\n        setPopupActionType(actionType);\r\n        setRecordForEdit(item);\r\n        setOpenPopup(true);\r\n      };\r\n\r\n      const fetchSites = () => {\r\n        axios\r\n          .get(\r\n            `api/Definition/GetAllSitesByCompany/?cmpID=${company.companyId}`,\r\n            {\r\n              headers: { Authorization: `Bearer ${token.jwtToken}` }\r\n            }\r\n          )\r\n          .then((res) => {\r\n            setLoading(false);\r\n            console.log(JSON.stringify(res.data));\r\n            setRecords(res.data);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      };\r\n\r\n      React.useEffect(() => {\r\n        setLoading(true);\r\n        fetchSites();\r\n      }, [company]);\r\n\r\n      return (\r\n        <>\r\n          <Helmet>\r\n            <title>Site</title>\r\n          </Helmet>\r\n          <Box\r\n            sx={{\r\n              backgroundColor: 'background.default',\r\n              minHeight: '100%',\r\n              py: 3\r\n            }}\r\n          >\r\n            <Container maxWidth={false}>\r\n              <Grid container spacing={3}>\r\n                <Grid item lg={12} md={12} xl={12} xs={12}>\r\n                  <Card>\r\n                    <CardHeader title=\"\" />\r\n                    <PerfectScrollbar>\r\n                      <Paper className={classes.pageContent}>\r\n                        <Toolbar className={classes.seachToolbar}>\r\n                          <Box display=\"flex\" flexGrow={1}>\r\n                            <Controls.Input\r\n                              label=\"Search\"\r\n                              className={classes.searchInput}\r\n                              InputProps={{\r\n                                startAdornment: (\r\n                                  <InputAdornment position=\"start\">\r\n                                    <Search />\r\n                                  </InputAdornment>\r\n                                )\r\n                              }}\r\n                              onChange={handleSearch}\r\n                            />\r\n                          </Box>\r\n                          <Controls.Button\r\n                            text=\"\"\r\n                            variant=\"outlined\"\r\n                            startIcon={<AddIcon />}\r\n                            onClick={() => {\r\n                              openInPopup('add', null);\r\n                            }}\r\n                          />\r\n                        </Toolbar>\r\n                        <TblContainer>\r\n                          <TblHead />\r\n                          <TableBody>\r\n                            {recordsAfterPagingAndSorting().map((item) => (\r\n                              <TableRow key={item.id}>\r\n                                <TableCell>{item.siteCode}</TableCell>\r\n                                <TableCell>{item.siteName}</TableCell>\r\n                                <TableCell>{item.displayName}</TableCell>                             \r\n                                <TableCell>{item.isActive.toString() }</TableCell>\r\n                                <TableCell>\r\n                              {moment(item.creationTime).format('DD/MM/YYYY')}\r\n                            </TableCell>\r\n                                <TableCell>\r\n                              <Controls.ActionButton\r\n                                color=\"primary\"\r\n                                onClick={() => {\r\n                                  openInPopup('edit', item);\r\n                                }}\r\n                              >\r\n                                <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton color=\"secondary\">\r\n                                <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                            </TableCell>\r\n                              </TableRow>\r\n                            ))}\r\n                          </TableBody>\r\n                        </TblContainer>\r\n                        <TblPagination />\r\n                      </Paper>\r\n                      <Popup\r\n                        title={\r\n                          popupActionType === 'edit'\r\n                            ? 'Edit Site'\r\n                            : 'Add Site'\r\n                        }\r\n                        openPopup={openPopup}\r\n                        setOpenPopup={setOpenPopup}\r\n                      >\r\n                      </Popup>\r\n                    </PerfectScrollbar>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n          </Box>\r\n        </>\r\n      );\r\n  }","import React, { useState } from 'react';\r\nimport InvoiceTransactionForm from 'src/pages/InvoiceTransactionForm';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment\r\n} from '@material-ui/core';\r\nimport useTable from 'src/components/useTable';\r\nimport Controls from 'src/components/controls/Controls';\r\nimport { Search } from '@material-ui/icons';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Popup from 'src/components/Popup';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Box, Card, CardHeader, Container, Grid } from '@material-ui/core';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n      width: '85%'\r\n    }\r\n  }));\r\n\r\n  const headCells = [\r\n    { id: 'transporterCode', label: 'Transporter code' },\r\n    { id: 'transporterName', label: 'Transporter Name' },\r\n    { id: 'displayName', label: 'Display Name' },\r\n    { id: 'transporterDeliveryTime', label: 'Delivery Time' },\r\n    { id: 'isActive', label: 'Active' },\r\n    { id: 'creationTime', label: 'Created On' },\r\n  ];\r\n\r\n  export default function Transporter(props) {\r\n    const classes = useStyles();\r\n    const { token, setToken, company, setCompany } = props;\r\n    const [recordForEdit, setRecordForEdit] = useState(null);\r\n    const [popupActionType, setPopupActionType] = useState('add');\r\n    const [records, setRecords] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [filterFn, setFilterFn] = useState({\r\n      fn: (items) => {\r\n        return items;\r\n      }\r\n    });\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n      } = useTable(records, headCells, filterFn);\r\n\r\n      const handleSearch = (e) => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n          fn: (items) => {\r\n            if (target.value == '' || !target.value) return items;\r\n            else\r\n              return items.filter(\r\n                (x) =>\r\n                  x.transporterCode\r\n                    .toLowerCase()\r\n                    .includes(target.value.toLowerCase()) ||\r\n                  x.transporterName.toLowerCase().includes(target.value.toLowerCase())\r\n              );\r\n          }\r\n        });\r\n      };\r\n\r\n      const addOrEdit = (employee, resetForm) => {\r\n        // if (employee.id == 0) employeeService.insertEmployee(employee);\r\n        // else employeeService.updateEmployee(employee);\r\n        // resetForm();\r\n        // setRecordForEdit(null);\r\n        // setOpenPopup(false);\r\n        // setRecords(employeeService.getAllEmployees());\r\n        //add api call\r\n      };\r\n    \r\n      const openInPopup = (actionType, item) => {\r\n        setPopupActionType(actionType);\r\n        setRecordForEdit(item);\r\n        setOpenPopup(true);\r\n      };\r\n\r\n      const fetchTransporters = () => {\r\n        axios\r\n          .get(\r\n            `api/Definition/GetAllTransportersByCompany/?cmpID=${company.companyId}`,\r\n            {\r\n              headers: { Authorization: `Bearer ${token.jwtToken}` }\r\n            }\r\n          )\r\n          .then((res) => {\r\n            setLoading(false);\r\n            console.log(JSON.stringify(res.data));\r\n            setRecords(res.data);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      };\r\n\r\n      React.useEffect(() => {\r\n        setLoading(true);\r\n        fetchTransporters();\r\n      }, [company]);\r\n\r\n      return (\r\n        <>\r\n          <Helmet>\r\n            <title>Transporter</title>\r\n          </Helmet>\r\n          <Box\r\n            sx={{\r\n              backgroundColor: 'background.default',\r\n              minHeight: '100%',\r\n              py: 3\r\n            }}\r\n          >\r\n            <Container maxWidth={false}>\r\n              <Grid container spacing={3}>\r\n                <Grid item lg={12} md={12} xl={12} xs={12}>\r\n                  <Card>\r\n                    <CardHeader title=\"\" />\r\n                    <PerfectScrollbar>\r\n                      <Paper className={classes.pageContent}>\r\n                        <Toolbar className={classes.seachToolbar}>\r\n                          <Box display=\"flex\" flexGrow={1}>\r\n                            <Controls.Input\r\n                              label=\"Search\"\r\n                              className={classes.searchInput}\r\n                              InputProps={{\r\n                                startAdornment: (\r\n                                  <InputAdornment position=\"start\">\r\n                                    <Search />\r\n                                  </InputAdornment>\r\n                                )\r\n                              }}\r\n                              onChange={handleSearch}\r\n                            />\r\n                          </Box>\r\n                          <Controls.Button\r\n                            text=\"\"\r\n                            variant=\"outlined\"\r\n                            startIcon={<AddIcon />}\r\n                            onClick={() => {\r\n                              openInPopup('add', null);\r\n                            }}\r\n                          />\r\n                        </Toolbar>\r\n                        <TblContainer>\r\n                          <TblHead />\r\n                          <TableBody>\r\n                            {recordsAfterPagingAndSorting().map((item) => (\r\n                              <TableRow key={item.id}>\r\n                                <TableCell>{item.transporterCode}</TableCell>\r\n                                <TableCell>{item.transporterName}</TableCell>\r\n                                <TableCell>{item.displayName}</TableCell>\r\n                                <TableCell>{item.transporterDeliveryTime.toString() }</TableCell>                             \r\n                                <TableCell>{item.isActive.toString() }</TableCell>\r\n                                <TableCell>\r\n                              {moment(item.creationTime).format('DD/MM/YYYY')}\r\n                            </TableCell>\r\n                                <TableCell>\r\n                              <Controls.ActionButton\r\n                                color=\"primary\"\r\n                                onClick={() => {\r\n                                  openInPopup('edit', item);\r\n                                }}\r\n                              >\r\n                                <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton color=\"secondary\">\r\n                                <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                            </TableCell>\r\n                              </TableRow>\r\n                            ))}\r\n                          </TableBody>\r\n                        </TblContainer>\r\n                        <TblPagination />\r\n                      </Paper>\r\n                      <Popup\r\n                        title={\r\n                          popupActionType === 'edit'\r\n                            ? 'Edit Transporter'\r\n                            : 'Add Transporter'\r\n                        }\r\n                        openPopup={openPopup}\r\n                        setOpenPopup={setOpenPopup}\r\n                      >\r\n                      </Popup>\r\n                    </PerfectScrollbar>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n          </Box>\r\n        </>\r\n      );\r\n  }","import React, { useState } from 'react';\r\nimport InvoiceTransactionForm from 'src/pages/InvoiceTransactionForm';\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment\r\n} from '@material-ui/core';\r\nimport useTable from 'src/components/useTable';\r\nimport Controls from 'src/components/controls/Controls';\r\nimport { Search } from '@material-ui/icons';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Popup from 'src/components/Popup';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Box, Card, CardHeader, Container, Grid } from '@material-ui/core';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pageContent: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n      width: '85%'\r\n    }\r\n  }));\r\n\r\n  const headCells = [\r\n    { id: 'supplierCode', label: 'Supplier code' },\r\n    { id: 'supplierName', label: 'Supplier Name' },\r\n    { id: 'displayName', label: 'Display Name' },\r\n    { id: 'supplierTypeId', label: 'Supplier Type' },\r\n    { id: 'isActive', label: 'Active' },\r\n    { id: 'creationTime', label: 'Created On' },\r\n  ];\r\n\r\n  export default function Supplier(props) {\r\n    const classes = useStyles();\r\n    const { token, setToken, company, setCompany } = props;\r\n    const [recordForEdit, setRecordForEdit] = useState(null);\r\n    const [popupActionType, setPopupActionType] = useState('add');\r\n    const [records, setRecords] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [filterFn, setFilterFn] = useState({\r\n      fn: (items) => {\r\n        return items;\r\n      }\r\n    });\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n      } = useTable(records, headCells, filterFn);\r\n\r\n      const handleSearch = (e) => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n          fn: (items) => {\r\n            if (target.value == '' || !target.value) return items;\r\n            else\r\n              return items.filter(\r\n                (x) =>\r\n                  x.supplierCode\r\n                    .toLowerCase()\r\n                    .includes(target.value.toLowerCase()) ||\r\n                  x.supplierName.toLowerCase().includes(target.value.toLowerCase())\r\n              );\r\n          }\r\n        });\r\n      };\r\n\r\n      const addOrEdit = (employee, resetForm) => {\r\n        // if (employee.id == 0) employeeService.insertEmployee(employee);\r\n        // else employeeService.updateEmployee(employee);\r\n        // resetForm();\r\n        // setRecordForEdit(null);\r\n        // setOpenPopup(false);\r\n        // setRecords(employeeService.getAllEmployees());\r\n        //add api call\r\n      };\r\n    \r\n      const openInPopup = (actionType, item) => {\r\n        setPopupActionType(actionType);\r\n        setRecordForEdit(item);\r\n        setOpenPopup(true);\r\n      };\r\n\r\n      const fetchSuppliers = () => {\r\n        axios\r\n          .get(\r\n            `api/Definition/GetAllSuppliersByCompany/?cmpID=${company.companyId}`,\r\n            {\r\n              headers: { Authorization: `Bearer ${token.jwtToken}` }\r\n            }\r\n          )\r\n          .then((res) => {\r\n            setLoading(false);\r\n            console.log(JSON.stringify(res.data));\r\n            setRecords(res.data);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      };\r\n\r\n      React.useEffect(() => {\r\n        setLoading(true);\r\n        fetchSuppliers();\r\n      }, [company]);\r\n\r\n      return (\r\n        <>\r\n          <Helmet>\r\n            <title>Supplier</title>\r\n          </Helmet>\r\n          <Box\r\n            sx={{\r\n              backgroundColor: 'background.default',\r\n              minHeight: '100%',\r\n              py: 3\r\n            }}\r\n          >\r\n            <Container maxWidth={false}>\r\n              <Grid container spacing={3}>\r\n                <Grid item lg={12} md={12} xl={12} xs={12}>\r\n                  <Card>\r\n                    <CardHeader title=\"\" />\r\n                    <PerfectScrollbar>\r\n                      <Paper className={classes.pageContent}>\r\n                        <Toolbar className={classes.seachToolbar}>\r\n                          <Box display=\"flex\" flexGrow={1}>\r\n                            <Controls.Input\r\n                              label=\"Search\"\r\n                              className={classes.searchInput}\r\n                              InputProps={{\r\n                                startAdornment: (\r\n                                  <InputAdornment position=\"start\">\r\n                                    <Search />\r\n                                  </InputAdornment>\r\n                                )\r\n                              }}\r\n                              onChange={handleSearch}\r\n                            />\r\n                          </Box>\r\n                          <Controls.Button\r\n                            text=\"\"\r\n                            variant=\"outlined\"\r\n                            startIcon={<AddIcon />}\r\n                            onClick={() => {\r\n                              openInPopup('add', null);\r\n                            }}\r\n                          />\r\n                        </Toolbar>\r\n                        <TblContainer>\r\n                          <TblHead />\r\n                          <TableBody>\r\n                            {recordsAfterPagingAndSorting().map((item) => (\r\n                              <TableRow key={item.id}>\r\n                                <TableCell>{item.supplierCode}</TableCell>\r\n                                <TableCell>{item.supplierName}</TableCell>\r\n                                <TableCell>{item.displayName}</TableCell>  \r\n                                <TableCell>Jeans</TableCell>                           \r\n                                <TableCell>{item.isActive.toString() }</TableCell>\r\n                                <TableCell>\r\n                              {moment(item.creationTime).format('DD/MM/YYYY')}\r\n                            </TableCell>\r\n                                <TableCell>\r\n                              <Controls.ActionButton\r\n                                color=\"primary\"\r\n                                onClick={() => {\r\n                                  openInPopup('edit', item);\r\n                                }}\r\n                              >\r\n                                <EditOutlinedIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                              <Controls.ActionButton color=\"secondary\">\r\n                                <CloseIcon fontSize=\"small\" />\r\n                              </Controls.ActionButton>\r\n                            </TableCell>\r\n                              </TableRow>\r\n                            ))}\r\n                          </TableBody>\r\n                        </TblContainer>\r\n                        <TblPagination />\r\n                      </Paper>\r\n                      <Popup\r\n                        title={\r\n                          popupActionType === 'edit'\r\n                            ? 'Edit Supplier'\r\n                            : 'Add Supplier'\r\n                        }\r\n                        openPopup={openPopup}\r\n                        setOpenPopup={setOpenPopup}\r\n                      >\r\n                      </Popup>\r\n                    </PerfectScrollbar>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n          </Box>\r\n        </>\r\n      );\r\n  }","import React, { useEffect } from 'react';\n\nconst Logout = (props) => {\n  const { setToken, setCompany } = props;\n  useEffect(() => {\n    setToken(null);\n    setCompany(null);\n  }, []);\n\n  return null;\n};\n\nexport default Logout;\n","import React, { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/components/DashboardLayout';\nimport Dashboard from 'src/pages/Dashboard';\nimport Login from 'src/pages/Login';\nimport NotFound from 'src/pages/NotFound';\nimport InvoiceTransactions from 'src/pages/InvoiceTransactions';\nimport Branch from 'src/pages/Branch';\nimport Site from 'src/pages/Site';\nimport Transporter from 'src/pages/Transporter';\nimport Supplier from 'src/pages/Supplier';\nimport Logout from 'src/pages/Logout';\n\nconst AppRoutes = (token, setToken, company, setCompany) => {\n  console.log('AppRoutes ==> token: ' + token);\n  return [\n    {\n      path: '/',\n      element: (\n        <DashboardLayout\n          token={token}\n          setToken={setToken}\n          company={company}\n          setCompany={setCompany}\n        />\n      ),\n      children: [\n        {\n          path: 'dashboard',\n          element: token ? (\n            <Dashboard\n              token={token}\n              setToken={setToken}\n              company={company}\n              setCompany={setCompany}\n            />\n          ) : (\n            <Navigate to=\"/login\" />\n          )\n        },\n        {\n          path: 'invoices',\n          element: token ? (\n            <InvoiceTransactions\n              token={token}\n              setToken={setToken}\n              company={company}\n              setCompany={setCompany}\n            />\n          ) : (\n            <Navigate to=\"/login\" />\n          )\n        },\n        {\n          path: 'branch',\n          element: token ? (\n            <Branch\n              token={token}\n              setToken={setToken}\n              company={company}\n              setCompany={setCompany}\n            />\n          ) : (\n            <Navigate to=\"/login\" />\n          )\n        },\n        {\n          path: 'site',\n          element: token ? (\n            <Site\n              token={token}\n              setToken={setToken}\n              company={company}\n              setCompany={setCompany}\n            />\n          ) : (\n            <Navigate to=\"/login\" />\n          )\n        },\n        {\n          path: 'transporter',\n          element: token ? (\n            <Transporter\n              token={token}\n              setToken={setToken}\n              company={company}\n              setCompany={setCompany}\n            />\n          ) : (\n            <Navigate to=\"/login\" />\n          )\n        },\n        {\n          path: 'supplier',\n          element: token ? (\n            <Supplier\n              token={token}\n              setToken={setToken}\n              company={company}\n              setCompany={setCompany}\n            />\n          ) : (\n            <Navigate to=\"/login\" />\n          )\n        },\n        {\n          path: 'login',\n          element: token ? (\n            <Navigate to=\"/dashboard\" />\n          ) : (\n            <Login setToken={setToken} setCompany={setCompany} />\n          )\n        },\n        {\n          path: 'logout',\n          element: token ? (\n            <Logout setToken={setToken} setCompany={setCompany} />\n          ) : (\n            <Navigate to=\"/login\" />\n          )\n        },\n        {\n          path: '*',\n          element: token ? (\n            <NotFound\n              token={token}\n              setToken={setToken}\n              company={company}\n              setCompany={setCompany}\n            />\n          ) : (\n            <NotFound />\n          )\n        }\n      ]\n    }\n  ];\n};\n\nexport default AppRoutes;\n","import React from 'react';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport 'src/mixins/chartjs';\nimport theme from 'src/theme';\nimport AppRoutes from './AppRoutes';\nimport useToken from 'src/components/useToken';\nimport useCompany from 'src/components/useCompany';\n\nconst App = () => {\n  const { token, setToken } = useToken();\n  const { company, setCompany } = useCompany();\n  console.log('App ==> token: ' + token);\n  const routing = useRoutes(AppRoutes(token, setToken, company, setCompany));\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {routing}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { useState } from 'react';\n\nexport default function useToken() {\n  const getToken = () => {\n    const token = localStorage.getItem('token');\n    return token ? JSON.parse(token) : token;\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = (token) => {\n    localStorage.setItem('token', JSON.stringify(token));\n    setToken(token);\n  };\n\n  return {\n    setToken: saveToken,\n    token: token\n  };\n}\n","import { useState } from 'react';\n\nexport default function useCompany() {\n  const getCompany = () => {\n    const company = localStorage.getItem('company');\n    return company ? JSON.parse(company) : company;\n  };\n\n  const [company, setCompany] = useState(getCompany());\n\n  const saveCompany = (company) => {\n    localStorage.setItem('company', JSON.stringify(company));\n    setCompany(company);\n  };\n\n  return {\n    setCompany: saveCompany,\n    company: company\n  };\n}\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'http://test.picktech.in/';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}